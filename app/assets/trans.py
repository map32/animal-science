from deep_translator import GoogleTranslator
import deepl

deepl_api_key = '817da8c1-1199-48b0-a939-e6fae968d8e0:fx'
translator = deepl.Translator(deepl_api_key)
# Initialize the translator
#translator = GoogleTranslator(source="ko", target="en")
import json

name_mapping = {
  "Canis lupus coreanus": "Korean wolf",
  "Cervus nippon hortulorum": "Sika deer",
  "Ursus thibetanus ussuricus": "Ussuri black bear",
  "Myotis rufoniger": "Red-black myotis",
  "Moschus moschiferus": "Siberian musk deer",
  "Naemorhedus caudatus": "Long-tailed goral",
  "Lutra lutra": "Eurasian otter",
  "Lynx lynx": "Eurasian lynx",
  "Vulpes vulpes peculiosa": "Korean red fox",
  "Murina ussuriensis": "Ussuri tube-nosed bat",
  "Panthera pardus orientalis": "Amur leopard",
  "Panthera tigris altaica": "Siberian tiger",
  "Martes flavigula": "Yellow-throated marten",
  "Mustela nivalis": "Least weasel",
  "Callorhinus ursinus": "Northern fur seal",
  "Phoca largha": "Spotted seal",
  "Prionailurus bengalensis": "Leopard cat",
  "Eumetopias jubatus": "Steller sea lion",
  "Plecotus ognevi": "Ognev's long-eared bat",
  "Pteromys volans": "Siberian flying squirrel",
  "Aquila chrysaetos": "Golden eagle",
  "Eurynorhynchus pygmeus": "Spoon-billed sandpiper",
  "Egretta eulophotes": "Chinese egret",
  "Grus japonensis": "Red-crowned crane",
  "Falco peregrinus": "Peregrine falcon",
  "Ciconia nigra": "Black stork",
  "Platalea minor": "Black-faced spoonbill",
  "Haliaeetus pelagicus": "Steller's sea eagle",
  "Tringa guttifer": "Nordmann's greenshank",
  "Dryocopus javensis": "White-bellied woodpecker",
  "Mergus squamatus": "Scaly-sided merganser",
  "Cygnus olor": "Mute swan",
  "Ciconia boyciana": "Oriental white stork",
  "Haliaeetus albicilla": "White-tailed eagle",
  "Anser cygnoides": "Swan goose",
  "Larus saundersi": "Saunders's gull",
  "Haematopus ostralegus": "Eurasian oystercatcher",
  "Emberiza aureola": "Yellow-breasted bunting",
  "Grus grus": "Common crane",
  "Cygnus columbianus": "Tundra swan",
  "Larus relictus": "Relict gull",
  "Terpsiphone atrocaudata": "Japanese paradise flycatcher",
  "Strix uralensis": "Ural owl",
  "Dryocopus martius": "Black woodpecker",
  "Platalea leucorodia": "Eurasian spoonbill",
  "Otis tarda": "Great bustard",
  "Aegypius monachus": "Cinereous vulture",
  "Nipponia nippon": "Crested ibis",
  "Gallicrex cinerea": "Watercock",
  "Emberiza sulphurata": "Yellow bunting",
  "Pandion haliaetus": "Osprey",
  "Pernis ptilorhynchus": "Oriental honey buzzard",
  "Accipiter soloensis": "Chinese sparrowhawk",
  "Calidris tenuirostris": "Great knot",
  "Gorsachius goisagi": "Japanese night heron",
  "Synthliboramphus wumizusume": "Japanese murrelet",
  "Galerida cristata": "Crested lark",
  "Accipiter nisus": "Eurasian sparrowhawk",
  "Falco subbuteo": "Eurasian hobby",
  "Locustella pleskei": "Pleske's grasshopper warbler",
  "Milvus migrans": "Black kite",
  "Emberiza yessoensis": "Ochre-rumped bunting",
  "Bubo bubo": "Eurasian eagle-owl",
  "Circus melanoleucos": "Pied harrier",
  "Numenius madagascariensis": "Far Eastern curlew",
  "Columba rupestris": "Hill pigeon",
  "Pitta nympha": "Fairy pitta",
  "Grus vipio": "White-naped crane",
  "Circus cyaneus": "Hen harrier",
  "Accipiter gularis": "Japanese sparrowhawk",
  "Accipiter gentilis": "Northern goshawk",
  "Cygnus cygnus": "Whooper swan",
  "Anser fabalis": "Taiga bean goose",
  "Ixobrychus eurhythmus": "Von Schrenck's bittern",
  "Buteo hemilasius": "Upland buzzard",
  "Strix aluco": "Tawny owl",
  "Aquila clanga": "Greater spotted eagle",
  "Branta bernicla": "Brent goose",
  "Grus monacha": "Hooded crane",
  "Columba janthina": "Japanese wood pigeon",
  "Charadrius placidus": "Long-billed plover",
  "Anser erythropus": "Lesser white-fronted goose",
  "Aquila heliaca": "Eastern imperial eagle",
  "Sibynophis chinensis": "Chinese many-toothed snake",
  "Elaphe schrenckii": "Amur rat snake",
  "Mauremys reevesii": "Reeves's turtle",
  "Eremias argus": "Argus racerunner",
  "Dryophytes suweonensis": "Suweon tree frog",
  "Hynobius yangi": "Yang's salamander",
  "Pelophylax chosenicus": "Korean brown frog",
  "Kaloula borealis": "Boreal digging frog",
  "Pseudopungtungia nigra": "Korean dark sleeper",
  "Pseudobagrus brevicorpus": "Short-barbeled catfish",
  "Odontobutis obscura": "Dark sleeper",
  "Microphysogobio koreensis": "Korean stumpy bullhead",
  "Cobitis choii": "Choi's spined loach",
  "Koreocobitis naktongensis": "Nakdong korean loach",
  "Microphysogobio rapidus": "Rapid stumpy bullhead",
  "Acheilognathus somjinensis": "Somjin bitterling",
  "Kichulchoia brevifasciata": "Short-striped kichulcho",
  "Liobagrus obesus": "Fat catfish",
  "Gobiobotia nakdongensis": "Nakdong gudgeon",
  "Pseudopungtungia tenuicorpa": "Slender dark sleeper",
  "Pungitius sinensis": "Chinese ninespine stickleback",
  "Coreoperca kawamebari": "Japanese perch",
  "Gobiobotia macrocephala": "Large-headed gudgeon",
  "Lethenteron reissneri": "Far Eastern brook lamprey",
  "Gobiobotia brevibarba": "Short-barbeled gudgeon",
  "Acheilognathus signifer": "Sign-bearing bitterling",
  "Rhynchocypris semotilus": "Amur minnow",
  "Iksookimia pumila": "Dwarf iksookimia",
  "Phoxinus phoxinus": "Common minnow",
  "Brachymystax lenok tsinlingensis": "Tsinling lenok",
  "Lethenteron japonicus": "Japanese lamprey",
  "Acheilognathus majusculus": "Large bitterling",
  "Rhodeus pseudosericeus": "False rose bitterling",
  "Cottus hangiongensis": "Hangyeong sculpin",
  "Parnassius bremeri": "Korean clouded Apollo",
  "Chrysochroa coreana": "Korean jewel beetle",
  "Hipparchia autonoe": "Autonoe grayling",
  "Aporia crataegi": "Black-veined white",
  "Polyphylla laticollis manchurica": "Manchurian laticollis scarab",
  "Callipogon relictus": "Relic longhorn beetle",
  "Protantigius superans": "Superans hairstreak",
  "Nannophya koreana": "Korean scarlet dwarf dragonfly",
  "Macromia daimoji": "Daimoji cruiser",
  "Cicindela anchoralis": "Anchoralis tiger beetle",
  "Libellula angelina": "Angelina skimmer",
  "Prosopocoilus astacoides blanchardi": "Blanchardi stag beetle",
  "Haplotropis brunneriana": "Brunneriana grasshopper",
  "Acoptolabrus mirabilissimus mirabilissimus": "Mirabilissimus ground beetle",
  "Cybister chinensis": "Chinese diving beetle",
  "Kirkaldyia deyrolli": "Deyrolli giant water bug",
  "Gymnopleurus mopsus": "Mopsus dung beetle",
  "Cigaritis takanonis": "Takanonis silverline",
  "Copris tripartitus": "Tripartite dung beetle",
  "Mellicta ambigua": "Ambigua fritillary",
  "Argynnis nerippe": "Nerippe fritillary",
  "Leptalina unicolor": "Unicolor skipper",
  "Bombus koreanus": "Korean bumblebee",
  "Acoptolabrus changeonleei": "Changeonlee ground beetle",
  "Osmoderma caeleste": "Caeleste hermit beetle",
  "Sinia divina": "Divina hairstreak",
  "Cristaria plicata": "Asian triangle mussel",
  "Charonia lampas": "Knobbed triton",
  "Pseudohelice subquadrata": "Subquadrate crab",
  "Aculamprotula coreana": "Korean freshwater mussel",
  "Chasmagnathus convexus": "Convex crab",
  "Satsuma myomphala": "Geoje snail",
  "Dendronephthya suensoni": "Suenson's soft coral",
  "Tubastraea coccinea": "Orange cup coral",
  "Clithon retropictum": "Retropictum nerite",
  "Plumarella spinosa": "Spiny plumarella",
  "Ellobium chinense": "Chinese ear snail",
  "Euplexaura crassa": "Crassum soft coral",
  "Echinogorgia reticulata": "Reticulated sea fan",
  "Argyroneta aquatica": "European water spider",
  "Dendronephthya castanea": "Chestnut soft coral",
  "Ellisella ceratophyta": "Ceratophyta sea whip",
  "Sesarmops intermedius": "Red-clawed crab",
  "Ophiacantha linea": "Line brittle star",
  "Dendronephthya mollis": "Soft coral",
  "Koreanomelania nodifila": "Nodifila snail",
  "Karaftohelix adamsi": "Ulleungdo snail",
  "Dendrophyllia cribrosa": "Cribrose tree coral",
  "Nacospatangus alta": "Alta heart urchin",
  "Dendronephthya putteri": "Putter's soft coral",
  "Dendrophyllia ijimai": "Ijimai tree coral",
  "Plumarella adhaerans": "Adhering plumarella",
  "Koreanohadra koreana": "Korean land snail",
  "Echinogorgia complexa": "Complex sea fan",
  "Gammarus zeongogensis": "Zeongog gammarid",
  "Myriopathes japonica": "Japanese black coral",
  "Austruca lactea": "Milky fiddler crab",
  "Dendronephthya alba": "White soft coral",
  "Cypripedium japonicum": "Japanese lady's slipper",
  "Gastrochilus fuscopunctatus": "Brown-spotted gastrochilus",
  "Sedirea japonica": "Nara orchid",
  "Euchresta japonica": "Japanese euchresta",
  "Thrixspermum japonicum": "Japanese thrixspermum",
  "Diapensia lapponica var. obovata": "Obovate diapensia",
  "Cymbidium lancifolium": "Lance-leaf cymbidium",
  "Cypripedium guttatum": "Spotted lady's slipper",
  "Neofinetia falcata": "Wind orchid",
  "Leontopodium coreanum var. hallaisanense": "Halla edelweiss",
  "Cymbidium kanran": "Cold-growing cymbidium",
  "Lychnis kiusiana": "Korean lychnis",
  "Euryale ferox": "Fox nut",
  "Eleutherococcus senticosus": "Siberian ginseng",
  "Nymphaea tetragona var. minima": "Pygmy water lily",
  "Quercus gilva": "Gilva oak",
  "Glaux maritima var. obtusifolia": "Sea milkwort",
  "Cyclosorus interruptus": "Interrupted cyclosorus",
  "Neottianthe cucullata": "Hooded neottianthe",
  "Trientalis europaea subsp. arctica": "Arctic starflower",
  "Drosera peltata var. nipponica": "Shield sundew",
  "Kirengeshoma koreana": "Korean kirengeshoma",
  "Lilium dauricum": "Siberian lily",
  "Viola mirabilis": "Wonder violet",
  "Rhododendron aureum": "Rhododendron aureum",
  "Iris koreana": "Korean iris",
  "Aster altaicus var. uchiyamae": "Aster altaicus var. uchiyamae",
  "Anagallidium dichotomum": "Dichotomous swertia",
  "Iris dichotoma": "Vesper iris",
  "Cymbidium macrorhizon": "Large-root cymbidium",
  "Cicuta virosa": "Cowbane",
  "Cremastra unguiculata": "Two-leaf cremastra",
  "Ranunculus trichophyllus var. kadzusensis": "Kadzusa water crowfoot",
  "Lasianthus japonicus": "Japanese lasianthus",
  "Ceratopteris thalictroides": "Water sprite",
  "Habenaria flagellifera": "Whip-lip habenaria",
  "Aconitum coreanum": "Korean aconite",
  "Orobanche filicicola": "Fern broomrape",
  "Kuhlhasseltia nakaiana": "Kuhlhasseltia nakaiana",
  "Cypripedium macranthos": "Large-flowered lady's slipper",
  "Silene capitata": "Capitate silene",
  "Viburnum burejaeticum": "Bureja viburnum",
  "Paeonia obovata": "Obovate peony",
  "Saururus chinensis": "Chinese lizard's tail",
  "Woodwardia japonica": "Japanese chain fern",
  "Pterygopleurum neurophyllum": "Seoul pterygopleurum",
  "Dendrobium moniliforme": "Snow orchid",
  "Viola raddeana": "Radde's violet",
  "Cotoneaster wilsonii": "Wilson cotoneaster",
  "Scrophularia takesimensis": "Ulleung scrophularia",
  "Bupleurum latissimum": "Ulleung bupleurum",
  "Aconitum austrokoreense": "South Korean aconite",
  "Gymnadenia conopsea": "Fragrant orchid",
  "Psilotum nudum": "Whisk fern",
  "Brasenia schreberi": "Water shield",
  "Calanthe aristulifera": "Awned calanthe",
  "Pedicularis ishidoyana": "Ishidoya lousewort",
  "Thalictrum coreanum": "Korean meadow rue",
  "Viola websteri": "Webster's violet",
  "Cyrtosia septentrionalis": "Northern cyrtosia",
  "Utricularia yakusimensis": "Yakushima bladderwort",
  "Dysophylla yatabeana": "Yatabe dysophylla",
  "Amsonia elliptica": "Elliptic amsonia",
  "Lychnis wilfordii": "Wilford's lychnis",
  "Iris laevigata": "Rabbit-ear iris",
  "Mankyua chejuense": "Jeju fern ally",
  "Menyanthes trifoliata": "Buckbean",
  "Sarcandra glabra": "Glabrous sarcandra",
  "Cleisostoma scolopendrifolium": "Centipede orchid",
  "Lycoris chinensis var. sinuolata": "Chinese surprise lily",
  "Oberonia japonica": "Japanese oberonia",
  "Halenia coreana": "Korean halenia",
  "Isoetes coreana": "Korean quillwort",
  "Michelia compressa": "Formosan michelia",
  "Metanarthecium luteo-viride": "Yellow-green metanarthecium",
  "Bulbophyllum drymoglossum": "Bulbophyllum drymoglossum",
  "Epilobium hirsutum": "Great willowherb",
  "Gastrochilus japonicus": "Japanese gastrochilus",
  "Asplenium antiquum": "Bird's-nest fern",
  "Stellera chamaejasme": "Stellera chamaejasme",
  "Pedicularis hallaisanensis": "Halla lousewort",
  "Liparis auriculata": "Liparis auriculata",
  "Habenaria radiata": "White egret orchid",
  "Bulbophyllum inconspicuum": "Inconspicuous bulbophyllum",
  "Arctous rubra": "Red bearberry",
  "Dictyosphaeria cavernosa": "Green bubble seaweed",
  "Coccophora langsdorfii": "Coccophora langsdorfii",
  "Omphalotus guepiniiformis": "Omphalotus guepiniiformis",
  "Limosa lapponica": "Bar-tailed godwit",
  "Sterna albifrons": "Little tern",
  "Halcyon pileata": "Black-capped kingfisher",
  "Aythya baeri": "Baer's pochard",
  "Grus leucogeranus": "Siberian white crane",
  "Cottus koreanus": "Korean sculpin",
  "Hemibarbus mylodon": "Korean doty barbel",
  "Ladislavia taczanowskii": "Taczanowski's gudgeon",
  "Acoptolabrus leechi yooni": "Yoon's ground beetle",
  "Chalinga pratti": "Chalinga pratti",
  "Arctia caja": "Garden tiger moth",
  "Zigadenus sibiricus": "Siberian death camas",
  "Thalasseus bernsteini": "Chinese crested tern",
  "Asplenium wrightii": "Asplenium wrightii",
  "Adenophora erecta": "Erect ladybell",
  "Silene fasciculata": "Halla catchfly",
  "Mitella nuda": "Naked mitrewort",
  "Lycopodiella cernua": "Staghorn clubmoss",
  "Viola biflora": "Arctic yellow violet"
}

def translate_name(korean, latin):
    return name_mapping.get(latin, latin)

# Helper function to translate actions and history
def translate_action_type(korean):
    mapping = {
        "해당없음": "Not Applicable",
        "최소관심(LC)": "Least Concern (LC)",
        "지역절멸(RE)": "Regionally Extinct (RE)",
        "천연기념물": "Natural Monument",
        "취약(VU)": "Vulnerable (VU)",
        "부속서Ⅰ": "Appendix I",
        "부속서Ⅱ": "Appendix II",
        "부속서Ⅲ": "Appendix III",
        "위기(EN)": "Endangered (EN)",
        "준위협(NT)": "Near Threatened (NT)",
        "위급(CR)": "Critically Endangered (CR)"
    }
    return mapping.get(korean, korean)

def translate(text,context=None):
    try:
        return translator.translate_text(text, source_lang="KO", target_lang="EN-US",context=context)
    except Exception as e:
        print(e)
        print(text + ' is not translated.')
        return text

# Translate all extra_sections including their content
def translate_extra_sections_full(item):
    sections = item['extra_sections']
    title_map = {
        "형태": "Appearance",
        "생태": "Ecology",
        "위협요인": "Threats",
        "출처": "Source",
        "분포": "Distribution",
        "분류학적 위치": "Taxonomic Position",
        "보전조치": "Conservation Actions",
        "지정이력": "Designation History"
    }
    translated = translator.translate_text([entry['content'] if entry['content'] is not None else '' for entry in sections],source_lang="KO",target_lang="EN-US", context=f"these texts are snippets of information about animal {item['english_name']}")
    
    translated_sections = []
    for i, sec in enumerate(sections):
        if sec["content"] is not None:
            translated_sections.append({
                "title": title_map.get(sec["title"]) if sec["title"] in title_map else translator.translate_text(sec["title"],source_lang="KO",target_lang="EN-US"),
                "content": translated[i].text
            })
    return translated_sections

def translate_institution(text):
    map = {
        "해양수산부": "Ministry of Oceans and Fisheries",
        "문화재청": "Korea Heritage Service",
        "산림청": "Korea Forestry Service",
        "IUCN 범주": "IUCN Classification",
        "CITES": "CITES",
        "국가적색목록평가": "National Red List Assessment"
    }
    return map.get(text, text)
# Open the JSON file with UTF-8 encoding
with open('app/assets/species_info.json', 'r', encoding='utf-8') as file:
    data = json.load(file)
    # Recreate the translated dataset with full section translation
    translated_data_full = []
    for (index, item) in enumerate(data):
        translated_item = {
            "id": item["id"],
            "name": translate_name(item["korean_name"], item["english_name"]),
            "conservation_history": [entry.text for entry in translate(item['conservation_history'],context='Each item should start with "Listed as" ...')],
            "conservation_actions": [
                {
                    "action_type": translate_action_type(action["action_type"]),
                    "institutions": translate_institution(action["institutions"])
                }
                for action in item["conservation_actions"]
            ],
            "extra_sections": translate_extra_sections_full(item)
        }
        translated_data_full.append(translated_item)
        print(f"{index}/{len(data)} translated.")

# Save the fully translated result
output_path_full = "translated_species_info_full.json"
with open(output_path_full, "w", encoding="utf-8") as f:
    json.dump(translated_data_full, f, ensure_ascii=False, indent=2)